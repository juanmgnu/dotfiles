" vim: filetype=vifm :

" ~~~~~~~~~~~~~
" ~~ General ~~
" ~~~~~~~~~~~~~

" Command used to edit files in various contexts (the default is vim):
set vicmd=nvim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring:
set syscalls

" Move files that are deleted with dd or :d to the trash directory. 
" If you change this you will not be able to move files by deleting them and 
" then using p to put the file in the new location.
set trash

" This is how many directories to store in the directory history:
set history=100

" Automatically resolve symbolic links on l or Enter:
set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal):
"set fastrun

" Natural sort of (version) numbers within text:
set sortnumbers

" Maximum number of changes that can be undone:
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp:
set vimhelp

" If you would like to run an executable file when you press return on the 
" file name set this:
set norunexec

" Selected color scheme:
colorscheme gruvbox

" Format for displaying time in file list:
set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode:
set wildmenu

" Display completions in a form of popup with descriptions of the matches:
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files):
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase letter:
set ignorecase
set smartcase

" Don't highlight search results automatically:
set nohlsearch

" Use increment searching (search while typing):
set incsearch

" Try to leave some space from cursor to upper/lower border in lists:
set scrolloff=4

" Don't do too many requests to slow file systems:
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look:
set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

" Customize view columns a bit (enable ellipsis for truncated file names)
"set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" What should be saved automatically between vifm sessions. Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you:
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks


" ~~~~~~~~~~~~~~~
" ~~ Bookmarks ~~
" ~~~~~~~~~~~~~~~

mark r /
mark U /run/media/juan
mark h ~/
mark c ~/.config
mark b ~/.local/bin
mark d ~/Documents
mark D ~/Downloads
mark m ~/Music
mark p ~/Pictures
mark v ~/Videos


" ~~~~~~~~~~~~~~
" ~~ Commands ~~
" ~~~~~~~~~~~~~~

" :com[mand][!] command_name action
" The following macros can be used in a command:
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart


" ~~~~~~~~~~~~~~~
" ~~ Filetypes ~~
" ~~~~~~~~~~~~~~~

" The file type is for the default programs to be used with a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command.
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored. 
" To use a % you must put %%.

" Pdf
filextype *.pdf zathura %c %i &, atril %c %i &,
fileviewer *.pdf zathura %c %i &, atril %c %i &,

" PostScript
filextype *.ps,*.eps,*.ps.gz zathura %c %i &

" Djvu
filextype *.djvu zathura %c %i &

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus 
         \ {Play using ffplay}
         \ ffplay -nodisp -autoexit %c,

fileviewer *.mp3 mp3info
fileviewer *.flac soxi

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
         \ {View using vlc}
         \ vlc &,
         \ {View using mpv}
         \ mpv &,

fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
         \ ffprobe -pretty %c 2>&1

" Web
filextype *.html,*.htm firefox %f &

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in sxiv}
        \ sxiv %f &,
        \ {View in shotwell}
        \ shotwell &

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ identify %f

" OpenRaster
filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f

" Mindmap
filextype *.vym
        \ {Open with VYM}
        \ vym %f &

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c

" Torrent
filetype *.torrent transmission-gtk &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */ caja %f &

" Displaying pictures in terminal
"fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer


" ~~~~~~~~~~~~~~~~~~~~~~~~
" ~~ Keyboard shortcuts ~~
" ~~~~~~~~~~~~~~~~~~~~~~~~

" Start shell in current directory:
nnoremap s :shell<cr>

" Display sorting dialog:
nnoremap S :sort<cr>

" Toggle visibility of preview window:
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program:
nnoremap gb :file &<cr>l

" Interaction with system clipboard:
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif executable('xclip')
    " Yank current directory path into the clipboard
    nnoremap yd :!echo %d | xclip %i<cr>
    " Yank current file path into the clipboard
    nnoremap yf :!echo %c:p | xclip %i<cr>
elseif executable('xsel')
    " Yank current directory path into primary and selection clipboards
    nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                \ echo -n %d | xsel --clipboard --input %i<cr>
    " Yank current file path into into primary and selection clipboards
    nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                \ echo -n %c:p | xsel --clipboard --input %i<cr>
endif

" Faster renaming:
nnoremap I cw<c-a>
nnoremap A cw
nnoremap cc cw<c-u>

" Open console in current directory:
nnoremap ,t :!alacritty &<CR>

" Open editor to edit vifmrc and apply settings after returning to vifm:
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>

" Exit vifm:
nnoremap ,q :q<CR>
